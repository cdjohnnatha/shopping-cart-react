schema {
    query: query
}

type query {
  #This query gets the beneficiaries by a specific customer."
  productsPaginated(pagination: PaginationInput): ProductsPaginated
}

#Attributes definition for a product list and pagination."
type ProductsPaginated {
    pagination: PaginationType
  products: [ProductType]
}

#It represents the pagination response structure."
type PaginationType {
    totalPages: Int
  totalValues: Int
  rowsPerPage: Int
  currentPage: Int
}

#Attributes definition for a product."
type ProductType {
    _id: ID
  name: String!
  quantityAvailable: Int!
  maxQuantityPerCustomer: Int!
  category: String!
  description: String!
  price: Float!
  images: [ImageType]!
  currency: CurrencyType!
}

#Attributes available to images.
type ImageType {
    path: String
  tags: String
  size: String
  type: ImageEnumType
}

#Image types used around ecommerce application such as list, full image, thumbnail.

enum ImageEnumType {
    LIST
  FULL
  THUMBNAIL
}

#Currency definition, contains currency name and the label used.
type CurrencyType {
    name: String!
  label: String!
  price: Float!
}


#It represents the pagination input structure. It represents how many objects will be listed.
input PaginationInput {
    rowsPerPage: Int!
  currentPage: Int!
}
